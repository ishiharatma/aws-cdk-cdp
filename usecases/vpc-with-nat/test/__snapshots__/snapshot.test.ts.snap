// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot validation test 1`] = `
{
  "Description": "Create VPC , Subnets , InternetGateway and etc.",
  "Outputs": {
    "FlowLogsBucketName": {
      "Value": {
        "Ref": "FlowLogsBucket8912DCDB",
      },
    },
    "NATInstanceKeyPairId": {
      "Value": {
        "Fn::GetAtt": [
          "KeyPair1622897B",
          "KeyPairId",
        ],
      },
    },
    "NATInstancePublicIP": {
      "Value": {
        "Fn::GetAtt": [
          "NATInstance1DBDC28C",
          "PublicIp",
        ],
      },
    },
    "NATSecurityGroupId": {
      "Value": {
        "Fn::GetAtt": [
          "NATSecurityGroupDB004F3B",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-ap-northeast-1",
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "FlowLogsBucket8912DCDB",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
      "DependsOn": [
        "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-ap-northeast-1",
          "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip",
        },
        "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RevokeSecurityGroupEgress",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:ap-northeast-1:123456789012:security-group/",
                          {
                            "Fn::GetAtt": [
                              "MyVpcF9F0CA6F",
                              "DefaultSecurityGroup",
                            ],
                          },
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FlowLogsBucket8912DCDB": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "snapshot-test-flowlogs-123456789012",
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FlowLogsBucketAutoDeleteObjectsCustomResource261C6D2B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FlowLogsBucketPolicy49FA954A",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "FlowLogsBucket8912DCDB",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FlowLogsBucketPolicy49FA954A": {
      "Properties": {
        "Bucket": {
          "Ref": "FlowLogsBucket8912DCDB",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FlowLogsBucket8912DCDB",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FlowLogsBucket8912DCDB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "KeyPair1622897B": {
      "Properties": {
        "KeyFormat": "pem",
        "KeyName": "vpcstack-nat-KeyPair",
        "KeyType": "rsa",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::KeyPair",
    },
    "MyVpcF9F0CA6F": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "snapshot/test/VPC/123456789012",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "MyVpcFlowLogsFlowLogF83C1C7A": {
      "DependsOn": [
        "FlowLogsBucketAutoDeleteObjectsCustomResource261C6D2B",
        "FlowLogsBucketPolicy49FA954A",
      ],
      "Properties": {
        "LogDestination": {
          "Fn::GetAtt": [
            "FlowLogsBucket8912DCDB",
            "Arn",
          ],
        },
        "LogDestinationType": "s3",
        "ResourceId": {
          "Ref": "MyVpcF9F0CA6F",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/FlowLogs",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "MyVpcIGW5C4A4F63": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "snapshot/test/VPC/123456789012",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "MyVpcIsolatedSubnetSubnet1RouteTableAssociation4F6F5B7B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcIsolatedSubnetSubnet1RouteTableDE4E2393",
        },
        "SubnetId": {
          "Ref": "MyVpcIsolatedSubnetSubnet1SubnetBEB69234",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcIsolatedSubnetSubnet1RouteTableDE4E2393": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/IsolatedSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcIsolatedSubnetSubnet1SubnetBEB69234": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "IsolatedSubnet",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/IsolatedSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcIsolatedSubnetSubnet2RouteTable9E8E775E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/IsolatedSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcIsolatedSubnetSubnet2RouteTableAssociation0542B7DC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcIsolatedSubnetSubnet2RouteTable9E8E775E",
        },
        "SubnetId": {
          "Ref": "MyVpcIsolatedSubnetSubnet2Subnet4DC0B981",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcIsolatedSubnetSubnet2Subnet4DC0B981": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "IsolatedSubnet",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/IsolatedSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPrivateSubnetSubnet1DefaultRoute58825934": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnetSubnet1NATGateway9744F529",
        },
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnetSubnet1RouteTableD918A34F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPrivateSubnetSubnet1RouteTableAssociation2811D7AF": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnetSubnet1RouteTableD918A34F",
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnetSubnet1SubnetE8BD536C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPrivateSubnetSubnet1RouteTableD918A34F": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PrivateSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPrivateSubnetSubnet1SubnetE8BD536C": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "PrivateSubnet",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PrivateSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPrivateSubnetSubnet2DefaultRoute0FED656C": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnetSubnet2NATGateway883B336D",
        },
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnetSubnet2RouteTable83C86AF7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPrivateSubnetSubnet2RouteTable83C86AF7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PrivateSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPrivateSubnetSubnet2RouteTableAssociationE7A10A88": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnetSubnet2RouteTable83C86AF7",
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnetSubnet2SubnetE3BFCF91",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPrivateSubnetSubnet2SubnetE3BFCF91": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "PrivateSubnet",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PrivateSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPublicSubnetSubnet1DefaultRoute2D379878": {
      "DependsOn": [
        "MyVpcVPCGW488ACE0D",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63",
        },
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnetSubnet1RouteTable00654ADB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPublicSubnetSubnet1EIP5C2C4ED5": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyVpcPublicSubnetSubnet1NATGateway9744F529": {
      "DependsOn": [
        "MyVpcPublicSubnetSubnet1DefaultRoute2D379878",
        "MyVpcPublicSubnetSubnet1RouteTableAssociation2CCE9CDC",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnetSubnet1EIP5C2C4ED5",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet1Subnet60D1320D",
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyVpcPublicSubnetSubnet1RouteTable00654ADB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPublicSubnetSubnet1RouteTableAssociation2CCE9CDC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnetSubnet1RouteTable00654ADB",
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet1Subnet60D1320D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPublicSubnetSubnet1Subnet60D1320D": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "PublicSubnet",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet1",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPublicSubnetSubnet2DefaultRouteAFC76296": {
      "DependsOn": [
        "MyVpcVPCGW488ACE0D",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63",
        },
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnetSubnet2RouteTableC647F413",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPublicSubnetSubnet2EIPF93892AD": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyVpcPublicSubnetSubnet2NATGateway883B336D": {
      "DependsOn": [
        "MyVpcPublicSubnetSubnet2DefaultRouteAFC76296",
        "MyVpcPublicSubnetSubnet2RouteTableAssociation7AF8666E",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnetSubnet2EIPF93892AD",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet2Subnet122ADB1B",
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyVpcPublicSubnetSubnet2RouteTableAssociation7AF8666E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnetSubnet2RouteTableC647F413",
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet2Subnet122ADB1B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPublicSubnetSubnet2RouteTableC647F413": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPublicSubnetSubnet2Subnet122ADB1B": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "PublicSubnet",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/MyVpc/PublicSubnetSubnet2",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcRestrictDefaultSecurityGroupCustomResourceA4FCCD62": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Account": "123456789012",
        "DefaultSecurityGroupId": {
          "Fn::GetAtt": [
            "MyVpcF9F0CA6F",
            "DefaultSecurityGroup",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
            "Arn",
          ],
        },
      },
      "Type": "Custom::VpcRestrictDefaultSG",
      "UpdateReplacePolicy": "Delete",
    },
    "MyVpcS3VPCE1909106E": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "MyVpcPrivateSubnetSubnet1RouteTableD918A34F",
          },
          {
            "Ref": "MyVpcPrivateSubnetSubnet2RouteTable83C86AF7",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "snapshot/test/VPC/123456789012",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "MyVpcVPCGW488ACE0D": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "MyVpcIGW5C4A4F63",
        },
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "NATInstance1DBDC28C": {
      "DependsOn": [
        "NATInstanceInstanceRoleAFCEB150",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "NATInstanceInstanceProfile6B2F9E18",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t4g.nano",
        "KeyName": {
          "Ref": "KeyPair1622897B",
        },
        "LaunchTemplate": {
          "LaunchTemplateName": "NATInstanceLaunchTemplate",
          "Version": {
            "Fn::GetAtt": [
              "NATInstanceLaunchTemplate7C81DB2C",
              "LatestVersionNumber",
            ],
          },
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "NATSecurityGroupDB004F3B",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet1Subnet60D1320D",
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/NATInstance",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
sudo yum install iptables-services -y
sudo systemctl enable iptables
sudo systemctl start iptables
echo net.ipv4.ip_forward=1 >> /etc/sysctl.d/custom-ip-forwarding.conf
sudo sysctl -p /etc/sysctl.d/custom-ip-forwarding.conf
sudo /sbin/iptables -t nat -A POSTROUTING -o $(route | awk '/^default/{print $NF}') -j MASQUERADE
sudo /sbin/iptables -F FORWARD
sudo service iptables save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "NATInstanceInstanceProfile6B2F9E18": {
      "Properties": {
        "Roles": [
          {
            "Ref": "NATInstanceInstanceRoleAFCEB150",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "NATInstanceInstanceRoleAFCEB150": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/NATInstance",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NATInstanceLaunchTemplate7C81DB2C": {
      "Properties": {
        "LaunchTemplateData": {
          "MetadataOptions": {
            "HttpTokens": "required",
          },
        },
        "LaunchTemplateName": "NATInstanceLaunchTemplate",
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "NATSecurityGroupDB004F3B": {
      "Properties": {
        "GroupDescription": "Security group for NAT instances",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "MyVpcF9F0CA6F",
                "CidrBlock",
              ],
            },
            "Description": "Allow inbound traffic from VPC",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "NaclPrivate8CEDB4C5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/NaclPrivate",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPrivateDefaultAssociationVPCStackMyVpcIsolatedSubnetSubnet10840ED0173EB7400": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": {
          "Ref": "MyVpcIsolatedSubnetSubnet1SubnetBEB69234",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateDefaultAssociationVPCStackMyVpcIsolatedSubnetSubnet2A7426CF9E10C5445": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": {
          "Ref": "MyVpcIsolatedSubnetSubnet2Subnet4DC0B981",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateNaclEgressPrivate072DB69C": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPrivateNaclIngressPrivate7EEDF85F": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 120,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublic8DAE29D3": {
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": "test",
          },
          {
            "Key": "Name",
            "Value": "VPCStack/NaclPublic",
          },
          {
            "Key": "Project",
            "Value": "snapshot",
          },
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPublicDefaultAssociationVPCStackMyVpcPublicSubnetSubnet195B326FE8B54B28F": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet1Subnet60D1320D",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicDefaultAssociationVPCStackMyVpcPublicSubnetSubnet2BCE4E1B59EBBEA53": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnetSubnet2Subnet122ADB1B",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicNaclEgressPublic3EA4D0C4": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublicNaclIngressPublicF18E2B85": {
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
